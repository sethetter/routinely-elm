version: '2'
services:
  web:
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - ./public:/usr/share/nginx/html
      - ./api/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./api/htpasswd:/etc/nginx/htpasswd
    links:
      - postgrest:postgrest

  postgrest:
    image: postgrest/postgrest
    links:
      - database:database
    environment:
      PGRST_DB_URI: "postgres://postgres@database/routinely"
      PGRST_DB_ANON_ROLE: postgres
      PGRST_DB_SCHEMA: public
      PGRST_DB_POOL: 10

      PGRST_SERVER_HOST: "*4"
      PGRST_SERVER_PORT: 3000

      PGRST_SERVER_PROXY_URI: "http://0.0.0.0:3000/"
      PGRST_JWT_SECRET: shhhthisisasecret
      PGRST_SECRET_IS_BASE64: 'true'

      PGRST_MAX_ROWS: 1000
      PGRST_PRE_REQUEST: ''

  database:
    image: postgres
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./w00t.sql:/docker-entrypoint-initdb.d/w00t.sql
      # - ./api/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      # - ./api/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    environment:
      POSTGRES_DB: routinely

  # Uncomment these lines and run `docker-compose up -d` for DB web UI
  # database-admin:
  #   image: adminer
  #   ports:
  #     - "8085:8080"
  #   links:
  #     - database:postgres

volumes:
  pg-data: {}
